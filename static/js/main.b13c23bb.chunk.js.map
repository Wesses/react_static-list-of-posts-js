{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","hasComments","length","PostList","posts","App","postsFromServer","userId","usersFromServer","find","idOfPost","commentsFromServer","filter","postId","ReactDOM","render","document","getElementById"],"mappings":"o48IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCLMI,G,YAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBL,EAAsBK,EAAtBL,KAAMC,EAAgBI,EAAhBJ,MAAOK,EAASD,EAATC,KAErB,OACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGF,IAFL,OAOE,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,SCpBIC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQK,UCJRC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBb,EAAgCa,EAAhCb,KAAMc,EAA0BD,EAA1BC,MAAOP,EAAmBM,EAAnBN,KAAME,EAAaI,EAAbJ,SACrBM,EAAcN,EAASO,OAAS,EAEtC,OACE,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,8BACG,eAED,cAAC,EAAD,CAAUd,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGI,IAGFQ,EAEG,cAAC,EAAD,CAAaN,SAAUA,IAGvB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCC9BCQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMR,KAAI,SAAAG,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCoB1CQ,EAAM,kBACjB,0BAAShB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUe,MAVZE,EAAgBV,KAAI,SAAAG,GAAI,kCACnBA,GADmB,IAEtBb,MAZmBqB,EAYER,EAAKQ,OAX5BC,EAAgBC,MAAK,qBAAGZ,KAAgBU,MACnC,MAWHZ,UARsBe,EAQMX,EAAKF,GAPnCc,EAAmBC,QAAO,qBAAGC,SAAwBH,QAD7B,IAAAA,EALHH,WCJvBO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b13c23bb.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {` by `}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const { user, title, body, comments } = post;\n  const hasComments = comments.length > 0;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {hasComments\n        ? (\n          <CommentList comments={comments} />\n        )\n        : (\n          <>\n            <hr />\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )}\n    </div>\n  );\n};\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo post={post} key={post.id} />)}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nconst findUserOfPost = userId => (\n  usersFromServer.find(({ id }) => id === userId)\n    || null\n);\n\nconst getCommentsOfpost = idOfPost => (\n  commentsFromServer.filter(({ postId }) => postId === idOfPost)\n);\n\nconst getListOfPosts = () => (\n  postsFromServer.map(post => ({\n    ...post,\n    user: findUserOfPost(post.userId),\n    comments: getCommentsOfpost(post.id),\n  }))\n);\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={getListOfPosts()} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}